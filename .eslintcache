[{"C:\\Users\\julie\\my-netflix\\src\\index.js":"1","C:\\Users\\julie\\my-netflix\\src\\container\\App.js":"2","C:\\Users\\julie\\my-netflix\\src\\components\\search-bar.js":"3","C:\\Users\\julie\\my-netflix\\src\\components\\video-list-item.js":"4","C:\\Users\\julie\\my-netflix\\src\\container\\video-list.js":"5","C:\\Users\\julie\\my-netflix\\src\\components\\video-detail.js":"6","C:\\Users\\julie\\my-netflix\\src\\components\\video.js":"7"},{"size":210,"mtime":1612799832113,"results":"8","hashOfConfig":"9"},{"size":3535,"mtime":1612946037956,"results":"10","hashOfConfig":"9"},{"size":931,"mtime":1612879412001,"results":"11","hashOfConfig":"9"},{"size":758,"mtime":1614181980291,"results":"12","hashOfConfig":"9"},{"size":630,"mtime":1612862059573,"results":"13","hashOfConfig":"9"},{"size":503,"mtime":1612947303107,"results":"14","hashOfConfig":"9"},{"size":375,"mtime":1612947072774,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"eq0zpz",{"filePath":"19","messages":"20","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"18"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"18"},"C:\\Users\\julie\\my-netflix\\src\\index.js",[],["33","34"],"C:\\Users\\julie\\my-netflix\\src\\container\\App.js",["35","36"],"import axios from 'axios';\nimport React, {Component}from 'react';\nimport SearchBar from '../components/search-bar';\nimport VideoList from '../container/video-list';\nimport VideoDetails from '../components/video-detail';\nimport Video from '../components/video';\n\nconst API_END_POINT = 'https://api.themoviedb.org/3/';\nconst POPULAR_MOVIE_URL = 'discover/movie?language=fr&sort_by=popularity.desc&include_adult=false&append_to_response=images';\nconst API_KEY = 'api_key=b1bb009f89a909c0ae0b65bc17104e0e';\nconst SEARCH_URL = 'search/movie?language=fr&include_adult=false';\n\nclass App extends Component {\n  constructor(props){\n    super(props);\n    this.state = { movieList : {}, currentMovie: {} \n    }\n  }\n  \n  componentWillMount(){\n    this.getAxiosRes();\n  }\n\n  getAxiosRes(){\n    axios.get(`${API_END_POINT}${POPULAR_MOVIE_URL}&${API_KEY}`).then(function (response){\n      this.setState({movieList: response.data.results.slice(1,7), currentMovie : response.data.results[0]}, () =>{\n        this.getVideoRes();\n      });\n      // console.log(\"nkjsfshofvjoperj\", this.state.movieList);\n    }.bind(this))\n  }\n\n  getVideoRes(){\n    axios.get(`${API_END_POINT}movie/${this.state.currentMovie.id}?${API_KEY}&append_to_response=videos&include_adult=false`).then(function(response) {\n      if(response.data.videos && response.data.videos.results[0]){\n        const youtubeId = response.data.videos.results[0].key;\n        let newCurrentMovie = this.state.currentMovie;\n        newCurrentMovie.videoId = youtubeId;\n        this.setState({currentMovie : newCurrentMovie, noVideo : ''});\n      } else(\n        this.setState({noVideo: 'Video Indisponible'})\n      )\n    }.bind(this));\n  }\n  onClickListItem(movie){\n    this.setState({currentMovie: movie}, () =>{\n      this.getVideoRes();\n      this.setRecommandation();\n    })\n  }\n\n  getTextSearch(textSearch){\n    axios.get(`${API_END_POINT}${SEARCH_URL}&${API_KEY}&query=${textSearch}`).then(function(res){\n      if(res.data && res.data.results[0]) {\n        if(res.data.results[0].id != this.state.currentMovie.id){\n          this.setState({currentMovie : res.data.results[0]}, () =>{\n            this.getVideoRes();\n            this.setRecommandation();\n          })\n        }\n      }   \n    }.bind(this));\n  }\n\n  setRecommandation(){\n    axios.get(`${API_END_POINT}movie/${this.state.currentMovie.id}/recommendations?${API_KEY}&language=fr`).then(function(res){\n      console.log('-------dckjbzezefhpluplu', res);\n      this.setState({movieList: res.data.results.slice(0, 6)});\n    }.bind(this));\n  }\n\n  render() {\n      const renderMoviesList = () => {\n        if(this.state.movieList.length >= 6){\n          return <VideoList listeFilms={this.state.movieList} callBack={this.onClickListItem.bind(this)} />\n        }\n      }\n      const renderNoVideo = () => {\n        if(this.state.noVideo != ''){\n          return <h1>{this.state.noVideo}</h1>\n        }\n      }\n\n  return (\n      <div>\n        <div className=\"search_bar\">\n          <SearchBar callBack={this.getTextSearch.bind(this)}/>\n        </div>\n        <div className=\"row\">\n          <div className=\"col-md-8\">\n            <Video videoID={this.state.currentMovie.videoId}/>\n            <VideoDetails title={this.state.currentMovie.title} overview={this.state.currentMovie.overview} releasedate={this.state.currentMovie.release_date}/>\n            {renderNoVideo()}\n          </div>\n          <div className=\"col-md-4\">\n            {renderMoviesList()}\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default App;","C:\\Users\\julie\\my-netflix\\src\\components\\search-bar.js",[],"C:\\Users\\julie\\my-netflix\\src\\components\\video-list-item.js",["37"],"C:\\Users\\julie\\my-netflix\\src\\container\\video-list.js",[],"C:\\Users\\julie\\my-netflix\\src\\components\\video-detail.js",[],"C:\\Users\\julie\\my-netflix\\src\\components\\video.js",["38"],"import React from 'react';\r\n\r\nconst YOUTUBE_URL = 'https://youtube.com/embed/';\r\n\r\nconst Video = (props) => {\r\n    const videoId = props.videoID;\r\n    return (\r\n        <div className=\"embed-responsive embed-responsive-16by9 video_box\">\r\n            <iframe className=\"embed-responsive-item\" src={`${YOUTUBE_URL}${videoId}`}/>\r\n        </div>\r\n    )\r\n}\r\nexport default Video;",{"ruleId":"39","replacedBy":"40"},{"ruleId":"41","replacedBy":"42"},{"ruleId":"43","severity":1,"message":"44","line":55,"column":35,"nodeType":"45","messageId":"46","endLine":55,"endColumn":37},{"ruleId":"43","severity":1,"message":"44","line":79,"column":31,"nodeType":"45","messageId":"46","endLine":79,"endColumn":33},{"ruleId":"47","severity":1,"message":"48","line":10,"column":21,"nodeType":"49","endLine":10,"endColumn":134},{"ruleId":"50","severity":1,"message":"51","line":9,"column":13,"nodeType":"49","endLine":9,"endColumn":89},"no-native-reassign",["52"],"no-negated-in-lhs",["53"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","jsx-a11y/iframe-has-title","<iframe> elements must have a unique title property.","no-global-assign","no-unsafe-negation"]